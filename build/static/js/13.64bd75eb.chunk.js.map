{"version":3,"sources":["../node_modules/suneditor/src/lang sync /^/.//.*/.js$","views/Components/unit/EditUnit.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","editorConfig","EditUnit","props","resetButton","setState","prevState","title","content","state","_id","match","params","topicId","isLoading","handleInputChange","bind","submitButton","this","getData","event","target","value","type","checked","name","a","body","API","put","then","response","console","log","catch","error","alert","get","data","xs","className","action","method","encType","row","md","htmlFor","onChange","placeholder","defaultValue","setOptions","buttonList","height","handleEditorChange","size","color","onClick","Component"],"mappings":"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","file":"static/js/13.64bd75eb.chunk.js","sourcesContent":["var map = {\n\t\"./ckb.js\": 678,\n\t\"./da.js\": 679,\n\t\"./de.js\": 680,\n\t\"./en.js\": 672,\n\t\"./es.js\": 681,\n\t\"./fr.js\": 682,\n\t\"./he.js\": 683,\n\t\"./index.js\": 733,\n\t\"./it.js\": 684,\n\t\"./ja.js\": 685,\n\t\"./ko.js\": 686,\n\t\"./lv.js\": 687,\n\t\"./nl.js\": 688,\n\t\"./pl.js\": 689,\n\t\"./pt_br.js\": 690,\n\t\"./ro.js\": 691,\n\t\"./ru.js\": 692,\n\t\"./se.js\": 693,\n\t\"./ua.js\": 694,\n\t\"./zh_cn.js\": 695\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 732;","import React,{Component} from 'react'\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CLabel,\n  } from '@coreui/react'\n\nimport API from 'src/api';\n\nimport SunEditor, { } from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css';\n\nconst editorConfig = [\n  ['align','fontColor','fontSize'],\n  ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n  ['undo', 'redo'],['outdent', 'indent'],\n];\n \nclass EditUnit extends Component {\n    constructor(props) {\n      super(props);            \n      this.state = {\n        _id:this.props.match.params.id,\n        title:'',\n        content:'',\n        topicId:'',\n        isLoading:false\n      }  \n      this.handleInputChange = this.handleInputChange.bind(this);\n      this.submitButton = this.submitButton.bind(this);      \n    }\n\n    componentDidMount(){\n      this.getData();\n    }\n\n    handleInputChange(event) {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n  \n      this.setState({\n        [name]: value\n      });\n    }\n\n    handleEditorChange(content){\n      this.setState({\n        content:content,\n      })\n    }\n\n    async submitButton(){      \n\n      let body = {\n        \"title\":this.state.title,\n        \"content\":this.state.content,\n        \"topicId\":this.state.topicId,\n      };\n      await API.put(\"/unit/\"+this.props.match.params.id, body)\n      .then((response)=>{\n        console.log(response.code)  \n      }).catch((error)=>{\n        alert(\"Try Again\");\n      });   \n    }\n\n    async getData(){\n      try {\n        this.setState({\n          isLoading : true\n        });\n        var response = await API.get(\"/unit/\"+this.props.match.params.id);          \n        this.setState({\n          _id : response.data.data._id,\n          title : response.data.data.title,\n          content : response.data.data.content,\n          topicId:response.data.data.topicId,\n          isLoading :false,\n        });\n      } catch (error) {   \n        alert(\"Try Again\");     \n      }\n    }\n\n    resetButton = ()=>{           \n        this.setState((prevState) => ({\n          title:'',\n          content:'',          \n        }),);        \n    }\n  \n    render() {\n      let {title,content,isLoading} = this.state;\n\n      if(isLoading){\n        return (\n          <>\n            <div>Loading...</div>          \n          </>\n        )\n      }\n      return (\n        <>\n        <CCol xs=\"12\">\n        <CCard>\n            <CCardHeader>\n              <span className=\"h4\">\n                Edit Unit\n              </span>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">                \n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"title\">Title</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"6\">\n                    <CInput onChange={this.handleInputChange} id=\"title\" name=\"title\" value={title} placeholder=\"Title\" />                    \n                  </CCol>\n                </CFormGroup>                \n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"subTitle\">Content</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    {/* <CInput onChange={this.handleInputChange} type=\"text\" id=\"subTitle\" name=\"subTitle\" placeholder=\"Enter Chapter SubTitle\"/>                     */}\n                    <SunEditor defaultValue={content} setOptions={{ buttonList: editorConfig }} height=\"70%\" onChange={(content) => { this.handleEditorChange(content) }} />\n                  </CCol>\n                </CFormGroup>             \n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton type=\"submit\" className=\"m-1\" size=\"sm\" color=\"primary\" onClick={this.submitButton}>Update</CButton>\n              <CButton type=\"reset\" size=\"sm\" className=\"m-1\" color=\"danger\" onClick={this.resetButton}>Reset</CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n    </>\n      );\n    }\n}\n\nexport default EditUnit;"],"sourceRoot":""}