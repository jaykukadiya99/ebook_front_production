{"version":3,"sources":["routes.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["routes","path","exact","name","component","React","lazy","loading","className","TheContent","fluid","fallback","map","route","idx","render","props","from","to","memo","TheFooter","fixed","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","withSubheader","inHeader","onClick","val","includes","type","_nav","_tag","icon","customClasses","_children","TheSidebar","show","onShowChange","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout"],"mappings":"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","file":"static/js/16.92ef5ee1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\nconst ChapterList = React.lazy(() => import('./views/Components/chapter/ChapterList'));\nconst AddChapter = React.lazy(() => import('./views/Components/chapter/AddChapter'));\nconst TopicsList = React.lazy(() => import('./views/Components/topics/TopicsList'));\nconst AddTopics = React.lazy(() => import('./views/Components/topics/AddTopics'));\nconst UnitList = React.lazy(() => import('./views/Components/unit/UnitList'));\nconst AddUnit = React.lazy(() => import('./views/Components/unit/AddUnit'));\nconst EditUnit = React.lazy(() => import('./views/Components/unit/EditUnit'));\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/chapter', name: 'Chapter', component: ChapterList },\n  { path: '/addchapter', name: 'addChapter', component: AddChapter },\n  { path: '/topics/:id', name: 'Topic', component: TopicsList },\n  { path: '/addtopics/:id', name: 'addTopic', component: AddTopics },\n  { path: '/unit/:id', name: 'Unit', component: UnitList },\n  { path: '/addunit/:id', name: 'addUnit', component: AddUnit },\n  { path: '/editunit/:id', name: 'editUnit', component: EditUnit },\n];\n\nexport default routes;\n","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/chapter\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <span className=\"ml-1\">&copy; 2021 E-Book.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        {/* <span className=\"mr-1\">Powered by</span>         */}\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n} from '@coreui/react'\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({ type: 'set', sidebarShow: val })\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({ type: 'set', sidebarShow: val })\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <div className=\"h1\">E Book</div>\n      </CHeaderBrand>\n\n\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\n\nconst _nav = [\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Chapter',\n    to: '/chapter',\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\" />,\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['Others']\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({ type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        {/* brand logo */}\n        <div className=\"h2\">E-book</div>\n        {/* minimized brand logo */}\n        {/* <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        /> */}\n      </CSidebarBrand>\n      <CSidebarNav>\n        {/* cerate sidebar items\n        using _nav.js        \n        */}\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      {/* <CSidebarMinimizer className=\"c-d-md-down-none\" /> */}\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","import React from 'react'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = () => {\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar/>\n      <div className=\"c-wrapper\">\n        <TheHeader/>\n        <div className=\"c-body\">\n          <TheContent/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}