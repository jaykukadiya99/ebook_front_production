{"version":3,"sources":["../node_modules/suneditor/src/lang sync /^/.//.*/.js$","views/Components/unit/EditUnit.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","editorConfig","EditUnit","props","resetButton","setState","prevState","title","content","state","_id","match","params","topicId","isLoading","handleInputChange","bind","submitButton","this","getData","event","target","value","type","checked","name","a","body","API","put","get","response","data","xs","className","onClick","history","goBack","action","method","encType","row","md","htmlFor","onChange","placeholder","defaultValue","setOptions","buttonList","height","handleEditorChange","size","color","Component"],"mappings":"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","file":"static/js/18.3e1fcfb0.chunk.js","sourcesContent":["var map = {\n\t\"./ckb.js\": 680,\n\t\"./da.js\": 681,\n\t\"./de.js\": 682,\n\t\"./en.js\": 678,\n\t\"./es.js\": 683,\n\t\"./fr.js\": 684,\n\t\"./he.js\": 685,\n\t\"./index.js\": 711,\n\t\"./it.js\": 686,\n\t\"./ja.js\": 687,\n\t\"./ko.js\": 688,\n\t\"./lv.js\": 689,\n\t\"./nl.js\": 690,\n\t\"./pl.js\": 691,\n\t\"./pt_br.js\": 692,\n\t\"./ro.js\": 693,\n\t\"./ru.js\": 694,\n\t\"./se.js\": 695,\n\t\"./ua.js\": 696,\n\t\"./zh_cn.js\": 697\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 710;","import React, { Component } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n} from \"@coreui/react\";\n\nimport API from \"src/api\";\n\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\";\n\nimport { history } from \"src/history\";\n\nconst editorConfig = [\n  [\"align\", \"fontColor\", \"fontSize\"],\n  [\"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\"],\n  [\"undo\", \"redo\"],\n  [\"outdent\", \"indent\"],\n];\n\nclass EditUnit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: this.props.match.params.id,\n      title: \"\",\n      content: \"\",\n      topicId: \"\",\n      isLoading: false,\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.submitButton = this.submitButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleEditorChange(content) {\n    this.setState({\n      content: content,\n    });\n  }\n\n  async submitButton() {\n    let body = {\n      title: this.state.title,\n      content: this.state.content,\n      topicId: this.state.topicId,\n    };\n    await API.put(\"/unit/\" + this.props.match.params.id, body);\n  }\n\n  async getData() {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n      var response = await API.get(\"/unit/\" + this.props.match.params.id);\n      this.setState({\n        _id: response.data.data._id,\n        title: response.data.data.title,\n        content: response.data.data.content,\n        topicId: response.data.data.topicId,\n        isLoading: false,\n      });\n    } catch (error) {\n    }\n  }\n\n  resetButton = () => {\n    this.setState((prevState) => ({\n      title: \"\",\n      content: \"\",\n    }));\n  };\n\n  render() {\n    let { title, content, isLoading } = this.state;\n\n    if (isLoading) {\n      return (\n        <>\n          <div>Loading...</div>\n        </>\n      );\n    }\n    return (\n      <>\n        <CCol xs=\"12\">\n          <CCard>\n            <CCardHeader>\n              <span className=\"h4\">Edit Unit</span>\n              <CButton\n                className=\"btn btn-outline-info float-right mx-2\"\n                onClick={() => {\n                  history.goBack();\n                }}\n              >\n                Back\n              </CButton>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"title\">Title</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"6\">\n                    <CInput\n                      onChange={this.handleInputChange}\n                      id=\"title\"\n                      name=\"title\"\n                      value={title}\n                      placeholder=\"Title\"\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"content\">Content</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <SunEditor\n                      defaultValue={content}\n                      setOptions={{ buttonList: editorConfig }}\n                      height=\"70%\"\n                      onChange={(content) => {\n                        this.handleEditorChange(content);\n                      }}\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                className=\"m-1\"\n                size=\"sm\"\n                color=\"primary\"\n                onClick={this.submitButton}\n              >\n                Update\n              </CButton>\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                className=\"m-1\"\n                color=\"danger\"\n                onClick={this.resetButton}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </>\n    );\n  }\n}\n\nexport default EditUnit;\n"],"sourceRoot":""}